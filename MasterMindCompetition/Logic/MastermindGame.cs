using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MasterMindCompetition.Logic { //this namespace handles the shared logic of all sub-games
    enum Colour { Red, Green, Blue, Yellow, Orange}

    abstract class MastermindGame { //abstract as a game must be of a certain type (ie auto-codemaker)
        private Code target; //the code generated by the codemaker
        private List<Code> guessCodes; //holds the player'
        private ICodemakerHostForm hostForm; //reference back to GUI
        public int maxGuesses { get; set; } //the max number of guesses that may be made
        

        protected MastermindGame(ICodemakerHostForm _form) { //initialise the game
            hostForm = _form; //update the host form
        }

        public virtual void newGame(int _maxGuesses) {
            maxGuesses = _maxGuesses;
        } //create a new game


        //properties to allow limited access to some private members from public scope
        public List<Code> GuessCodes { get { return guessCodes; } } //allow readonly access to the guessed codes
    }
}
